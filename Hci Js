// Main App Controller
const App = {
    init: function() {
        this.setupProfileDropdown();
        this.setupCalendar();
        this.setupCitySelection();
        this.setupCategoryModals();
    },

    // Profile Dropdown Functionality
    setupProfileDropdown: function() {
        const profileBtn = document.getElementById('profileBtn');
        const profileDropdown = document.getElementById('profileDropdown');

        if (!profileBtn || !profileDropdown) return;

        profileBtn.addEventListener('click', function(e) {
            e.stopPropagation();
            profileDropdown.classList.toggle('show');
        });

        // Close dropdown when clicking outside
        document.addEventListener('click', function(e) {
            if (!e.target.closest('.profile-container')) {
                profileDropdown.classList.remove('show');
            }
        });
    },

    // Calendar Functionality
    setupCalendar: function() {
        // Store appointments
        let appointments = JSON.parse(localStorage.getItem('appointments')) || [];
        
        // Get modal elements
        const modal = document.getElementById('appointmentModal');
        const closeBtn = document.querySelector('#appointmentModal .close');
        const dateDisplay = document.getElementById('selectedDate');
        const appointmentForm = document.getElementById('appointmentForm');
        const appointmentList = document.getElementById('appointmentList');
        
        // Date selection highlighting
        document.querySelectorAll('.calendar-day').forEach(day => {
            day.addEventListener('click', function() {
                document.querySelectorAll('.calendar-day').forEach(d => {
                    d.classList.remove('selected');
                });
                this.classList.add('selected');
            });
        });
        
        // Calendar day click handler
        document.querySelectorAll('.calendar-day a').forEach(day => {
            day.addEventListener('click', function(e) {
                e.preventDefault();
                const date = this.getAttribute('data-date');
                const isCurrentMonth = this.parentElement.classList.contains('current-month');
                
                if (isCurrentMonth) {
                    dateDisplay.textContent = date;
                    displayAppointments(date);
                    modal.style.display = 'block';
                }
            });
        });
        
        // Close modal
        closeBtn.addEventListener('click', function() {
            modal.style.display = 'none';
        });
        
        // Close modal when clicking outside
        window.addEventListener('click', function(e) {
            if (e.target === modal) {
                modal.style.display = 'none';
            }
        });
        
        // Form submission
        appointmentForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const date = dateDisplay.textContent;
            const title = document.getElementById('appointmentTitle').value;
            const details = document.getElementById('appointmentDetails').value;
            const time = document.getElementById('appointmentTime').value;
            const type = document.getElementById('appointmentType').value;
            
            // Create new appointment
            const newAppointment = {
                id: Date.now(),
                date: date,
                title: title,
                details: details,
                time: time,
                type: type
            };
            
            // Add to appointments array
            appointments.push(newAppointment);
            
            // Save to localStorage
            localStorage.setItem('appointments', JSON.stringify(appointments));
            
            // Display the updated list
            displayAppointments(date);
            
            // Reset form
            appointmentForm.reset();
        });
        
        // Display appointments for a date
        function displayAppointments(date) {
            const dateAppointments = appointments.filter(app => app.date === date);
            
            if (dateAppointments.length === 0) {
                appointmentList.innerHTML = '<p>No appointments for this date.</p>';
                return;
            }
            
            appointmentList.innerHTML = '<h4>Your Appointments:</h4>';
            
            dateAppointments.forEach(app => {
                const appointmentItem = document.createElement('div');
                appointmentItem.className = 'appointment-item';
                appointmentItem.innerHTML = `
                    <h4>${app.title} (${app.type})</h4>
                    <p><strong>Time:</strong> ${app.time}</p>
                    <p>${app.details}</p>
                    <button class="delete-appointment" data-id="${app.id}">Delete</button>
                `;
                appointmentList.appendChild(appointmentItem);
            });
            
            // Add event listeners to delete buttons
            document.querySelectorAll('.delete-appointment').forEach(btn => {
                btn.addEventListener('click', function() {
                    const id = parseInt(this.getAttribute('data-id'));
                    deleteAppointment(id, date);
                });
            });
        }
        
        // Delete appointment function
        function deleteAppointment(id, date) {
            appointments = appointments.filter(app => app.id !== id);
            localStorage.setItem('appointments', JSON.stringify(appointments));
            displayAppointments(date);
        }
        
        // Make delete function available for inline handlers (if needed)
        window.deleteAppointment = deleteAppointment;
    },

    // City Selection
    setupCitySelection: function() {
        document.querySelectorAll('.city-item').forEach(item => {
            item.addEventListener('click', function() {
                document.querySelectorAll('.city-item').forEach(i => {
                    i.classList.remove('selected');
                });
                this.classList.add('selected');
                console.log('Selected location:', this.textContent);
            });
        });
    },

    // Category Modals
    setupCategoryModals: function() {
        const modals = {
            community: document.getElementById('communityModal'),
            housing: document.getElementById('housingModal'),
            jobs: document.getElementById('jobsModal'),
            services: document.getElementById('servicesModal'),
            forsale: document.getElementById('forsaleModal'),
            discussion: document.getElementById('discussionModal')
        };

        const buttons = {
            community: document.getElementById('communityBtn'),
            housing: document.getElementById('housingBtn'),
            jobs: document.getElementById('jobsBtn'),
            services: document.getElementById('servicesBtn'),
            forsale: document.getElementById('forsaleBtn'),
            discussion: document.getElementById('discussionBtn')
        };

        Object.keys(buttons).forEach(key => {
            if (buttons[key]) {
                buttons[key].addEventListener('click', () => {
                    if (modals[key]) {
                        modals[key].style.display = "block";
                    }
                });
            }
        });

        document.querySelectorAll('.close').forEach(closeBtn => {
            closeBtn.addEventListener('click', function() {
                const modal = this.closest('.modal');
                if (modal) {
                    modal.style.display = "none";
                }
            });
        });

        window.addEventListener('click', (event) => {
            if (event.target.classList.contains('modal')) {
                event.target.style.display = "none";
            }
        });
    }
};

// Initialize the app when DOM is loaded
document.addEventListener('DOMContentLoaded', function() {
    App.init();
});
